// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: like.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 关注关系方法
type FavoriteVideoActionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	VideoId    int64 `protobuf:"varint,2,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	ActionType int64 `protobuf:"varint,3,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
}

func (x *FavoriteVideoActionReq) Reset() {
	*x = FavoriteVideoActionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteVideoActionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteVideoActionReq) ProtoMessage() {}

func (x *FavoriteVideoActionReq) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteVideoActionReq.ProtoReflect.Descriptor instead.
func (*FavoriteVideoActionReq) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{0}
}

func (x *FavoriteVideoActionReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FavoriteVideoActionReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *FavoriteVideoActionReq) GetActionType() int64 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

type FavoriteVideoActionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonRsp *CommonResponse `protobuf:"bytes,1,opt,name=common_rsp,json=commonRsp,proto3" json:"common_rsp,omitempty"`
}

func (x *FavoriteVideoActionRsp) Reset() {
	*x = FavoriteVideoActionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteVideoActionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteVideoActionRsp) ProtoMessage() {}

func (x *FavoriteVideoActionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteVideoActionRsp.ProtoReflect.Descriptor instead.
func (*FavoriteVideoActionRsp) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{1}
}

func (x *FavoriteVideoActionRsp) GetCommonRsp() *CommonResponse {
	if x != nil {
		return x.CommonRsp
	}
	return nil
}

type FavoriteCommentActionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId  int64 `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	UserId     int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ActionType int64 `protobuf:"varint,3,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
}

func (x *FavoriteCommentActionReq) Reset() {
	*x = FavoriteCommentActionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteCommentActionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteCommentActionReq) ProtoMessage() {}

func (x *FavoriteCommentActionReq) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteCommentActionReq.ProtoReflect.Descriptor instead.
func (*FavoriteCommentActionReq) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{2}
}

func (x *FavoriteCommentActionReq) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *FavoriteCommentActionReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FavoriteCommentActionReq) GetActionType() int64 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

type FavoriteCommentActionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonRsp *CommonResponse `protobuf:"bytes,1,opt,name=common_rsp,json=commonRsp,proto3" json:"common_rsp,omitempty"`
}

func (x *FavoriteCommentActionRsp) Reset() {
	*x = FavoriteCommentActionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteCommentActionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteCommentActionRsp) ProtoMessage() {}

func (x *FavoriteCommentActionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteCommentActionRsp.ProtoReflect.Descriptor instead.
func (*FavoriteCommentActionRsp) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{3}
}

func (x *FavoriteCommentActionRsp) GetCommonRsp() *CommonResponse {
	if x != nil {
		return x.CommonRsp
	}
	return nil
}

type GetFavoriteVideoIdListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetFavoriteVideoIdListReq) Reset() {
	*x = GetFavoriteVideoIdListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFavoriteVideoIdListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavoriteVideoIdListReq) ProtoMessage() {}

func (x *GetFavoriteVideoIdListReq) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavoriteVideoIdListReq.ProtoReflect.Descriptor instead.
func (*GetFavoriteVideoIdListReq) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{4}
}

func (x *GetFavoriteVideoIdListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetFavoriteVideoIdListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoIdList []int64 `protobuf:"varint,1,rep,packed,name=video_id_list,json=videoIdList,proto3" json:"video_id_list,omitempty"` // 关注z者用户信息列表
}

func (x *GetFavoriteVideoIdListRsp) Reset() {
	*x = GetFavoriteVideoIdListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFavoriteVideoIdListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavoriteVideoIdListRsp) ProtoMessage() {}

func (x *GetFavoriteVideoIdListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavoriteVideoIdListRsp.ProtoReflect.Descriptor instead.
func (*GetFavoriteVideoIdListRsp) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{5}
}

func (x *GetFavoriteVideoIdListRsp) GetVideoIdList() []int64 {
	if x != nil {
		return x.VideoIdList
	}
	return nil
}

// IsFavoriteVideoDict
type FavoriteVideoUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	VideoId int64 `protobuf:"varint,2,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *FavoriteVideoUnit) Reset() {
	*x = FavoriteVideoUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteVideoUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteVideoUnit) ProtoMessage() {}

func (x *FavoriteVideoUnit) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteVideoUnit.ProtoReflect.Descriptor instead.
func (*FavoriteVideoUnit) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{6}
}

func (x *FavoriteVideoUnit) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FavoriteVideoUnit) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type IsFavoriteVideoDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FavoriteUnitList []*FavoriteVideoUnit `protobuf:"bytes,1,rep,name=favorite_unit_list,json=favoriteUnitList,proto3" json:"favorite_unit_list,omitempty"`
}

func (x *IsFavoriteVideoDictReq) Reset() {
	*x = IsFavoriteVideoDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFavoriteVideoDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFavoriteVideoDictReq) ProtoMessage() {}

func (x *IsFavoriteVideoDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFavoriteVideoDictReq.ProtoReflect.Descriptor instead.
func (*IsFavoriteVideoDictReq) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{7}
}

func (x *IsFavoriteVideoDictReq) GetFavoriteUnitList() []*FavoriteVideoUnit {
	if x != nil {
		return x.FavoriteUnitList
	}
	return nil
}

type IsFavoriteVideoDictRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFavoriteDict map[string]bool `protobuf:"bytes,1,rep,name=is_favorite_dict,json=isFavoriteDict,proto3" json:"is_favorite_dict,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *IsFavoriteVideoDictRsp) Reset() {
	*x = IsFavoriteVideoDictRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFavoriteVideoDictRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFavoriteVideoDictRsp) ProtoMessage() {}

func (x *IsFavoriteVideoDictRsp) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFavoriteVideoDictRsp.ProtoReflect.Descriptor instead.
func (*IsFavoriteVideoDictRsp) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{8}
}

func (x *IsFavoriteVideoDictRsp) GetIsFavoriteDict() map[string]bool {
	if x != nil {
		return x.IsFavoriteDict
	}
	return nil
}

type FavoriteCommentUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommentId int64 `protobuf:"varint,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
}

func (x *FavoriteCommentUnit) Reset() {
	*x = FavoriteCommentUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteCommentUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteCommentUnit) ProtoMessage() {}

func (x *FavoriteCommentUnit) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteCommentUnit.ProtoReflect.Descriptor instead.
func (*FavoriteCommentUnit) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{9}
}

func (x *FavoriteCommentUnit) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FavoriteCommentUnit) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type IsFavoriteCommentDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FavoriteUnitList []*FavoriteCommentUnit `protobuf:"bytes,1,rep,name=favorite_unit_list,json=favoriteUnitList,proto3" json:"favorite_unit_list,omitempty"`
}

func (x *IsFavoriteCommentDictReq) Reset() {
	*x = IsFavoriteCommentDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFavoriteCommentDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFavoriteCommentDictReq) ProtoMessage() {}

func (x *IsFavoriteCommentDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFavoriteCommentDictReq.ProtoReflect.Descriptor instead.
func (*IsFavoriteCommentDictReq) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{10}
}

func (x *IsFavoriteCommentDictReq) GetFavoriteUnitList() []*FavoriteCommentUnit {
	if x != nil {
		return x.FavoriteUnitList
	}
	return nil
}

type IsFavoriteCommentDictRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFavoriteDict map[string]bool `protobuf:"bytes,1,rep,name=is_favorite_dict,json=isFavoriteDict,proto3" json:"is_favorite_dict,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *IsFavoriteCommentDictRsp) Reset() {
	*x = IsFavoriteCommentDictRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFavoriteCommentDictRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFavoriteCommentDictRsp) ProtoMessage() {}

func (x *IsFavoriteCommentDictRsp) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFavoriteCommentDictRsp.ProtoReflect.Descriptor instead.
func (*IsFavoriteCommentDictRsp) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{11}
}

func (x *IsFavoriteCommentDictRsp) GetIsFavoriteDict() map[string]bool {
	if x != nil {
		return x.IsFavoriteDict
	}
	return nil
}

type CommentLikeSumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId int64 `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *CommentLikeSumReq) Reset() {
	*x = CommentLikeSumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentLikeSumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentLikeSumReq) ProtoMessage() {}

func (x *CommentLikeSumReq) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentLikeSumReq.ProtoReflect.Descriptor instead.
func (*CommentLikeSumReq) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{12}
}

func (x *CommentLikeSumReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type CommentLikeSumRsq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LikeNums int64 `protobuf:"varint,1,opt,name=like_nums,json=likeNums,proto3" json:"like_nums,omitempty"`
}

func (x *CommentLikeSumRsq) Reset() {
	*x = CommentLikeSumRsq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentLikeSumRsq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentLikeSumRsq) ProtoMessage() {}

func (x *CommentLikeSumRsq) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentLikeSumRsq.ProtoReflect.Descriptor instead.
func (*CommentLikeSumRsq) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{13}
}

func (x *CommentLikeSumRsq) GetLikeNums() int64 {
	if x != nil {
		return x.LikeNums
	}
	return 0
}

type VideoLikeSumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId int64 `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *VideoLikeSumReq) Reset() {
	*x = VideoLikeSumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoLikeSumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoLikeSumReq) ProtoMessage() {}

func (x *VideoLikeSumReq) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoLikeSumReq.ProtoReflect.Descriptor instead.
func (*VideoLikeSumReq) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{14}
}

func (x *VideoLikeSumReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type VideoLikeSumRsq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LikeNums int64 `protobuf:"varint,1,opt,name=like_nums,json=likeNums,proto3" json:"like_nums,omitempty"`
}

func (x *VideoLikeSumRsq) Reset() {
	*x = VideoLikeSumRsq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoLikeSumRsq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoLikeSumRsq) ProtoMessage() {}

func (x *VideoLikeSumRsq) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoLikeSumRsq.ProtoReflect.Descriptor instead.
func (*VideoLikeSumRsq) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{15}
}

func (x *VideoLikeSumRsq) GetLikeNums() int64 {
	if x != nil {
		return x.LikeNums
	}
	return 0
}

var File_like_proto protoreflect.FileDescriptor

var file_like_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6d, 0x0a, 0x16, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x48, 0x0a, 0x16, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x72, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x73, 0x70, 0x22, 0x73, 0x0a, 0x18, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4a, 0x0a, 0x18, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x72,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x73, 0x70, 0x22, 0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x11, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x16, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x40,
	0x0a, 0x12, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x10,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xb2, 0x01, 0x0a, 0x16, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x44, 0x69, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x10, 0x69,
	0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x69, 0x63, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x49,
	0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0e, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x44, 0x69,
	0x63, 0x74, 0x1a, 0x41, 0x0a, 0x13, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x44, 0x69, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x13, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x18, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x42, 0x0a, 0x12, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e,
	0x69, 0x74, 0x52, 0x10, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x18, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x63, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x57, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x5f, 0x64, 0x69, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x49, 0x73,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x69, 0x63, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x44, 0x69, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x69, 0x73, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x1a, 0x41, 0x0a, 0x13, 0x49, 0x73,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a,
	0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x75, 0x6d, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0x30, 0x0a,
	0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x75, 0x6d, 0x52,
	0x73, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x22,
	0x2c, 0x0a, 0x0f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x75, 0x6d, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0x2e, 0x0a,
	0x0f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x75, 0x6d, 0x52, 0x73, 0x71,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x32, 0x87, 0x04,
	0x0a, 0x0f, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x47, 0x0a, 0x13, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x15, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x13, 0x49,
	0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x69,
	0x63, 0x74, 0x12, 0x17, 0x2e, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x49, 0x73,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x69, 0x63,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x15, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x63, 0x74, 0x12, 0x19, 0x2e,
	0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x49, 0x73, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x63, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x75, 0x6d, 0x12, 0x12, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x75, 0x6d, 0x52, 0x73, 0x71,
	0x12, 0x35, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65,
	0x53, 0x75, 0x6d, 0x12, 0x10, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x53,
	0x75, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b,
	0x65, 0x53, 0x75, 0x6d, 0x52, 0x73, 0x71, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x70, 0x62,
	0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_like_proto_rawDescOnce sync.Once
	file_like_proto_rawDescData = file_like_proto_rawDesc
)

func file_like_proto_rawDescGZIP() []byte {
	file_like_proto_rawDescOnce.Do(func() {
		file_like_proto_rawDescData = protoimpl.X.CompressGZIP(file_like_proto_rawDescData)
	})
	return file_like_proto_rawDescData
}

var file_like_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_like_proto_goTypes = []interface{}{
	(*FavoriteVideoActionReq)(nil),    // 0: FavoriteVideoActionReq
	(*FavoriteVideoActionRsp)(nil),    // 1: FavoriteVideoActionRsp
	(*FavoriteCommentActionReq)(nil),  // 2: FavoriteCommentActionReq
	(*FavoriteCommentActionRsp)(nil),  // 3: FavoriteCommentActionRsp
	(*GetFavoriteVideoIdListReq)(nil), // 4: GetFavoriteVideoIdListReq
	(*GetFavoriteVideoIdListRsp)(nil), // 5: GetFavoriteVideoIdListRsp
	(*FavoriteVideoUnit)(nil),         // 6: FavoriteVideoUnit
	(*IsFavoriteVideoDictReq)(nil),    // 7: IsFavoriteVideoDictReq
	(*IsFavoriteVideoDictRsp)(nil),    // 8: IsFavoriteVideoDictRsp
	(*FavoriteCommentUnit)(nil),       // 9: FavoriteCommentUnit
	(*IsFavoriteCommentDictReq)(nil),  // 10: IsFavoriteCommentDictReq
	(*IsFavoriteCommentDictRsp)(nil),  // 11: IsFavoriteCommentDictRsp
	(*CommentLikeSumReq)(nil),         // 12: CommentLikeSumReq
	(*CommentLikeSumRsq)(nil),         // 13: CommentLikeSumRsq
	(*VideoLikeSumReq)(nil),           // 14: VideoLikeSumReq
	(*VideoLikeSumRsq)(nil),           // 15: VideoLikeSumRsq
	nil,                               // 16: IsFavoriteVideoDictRsp.IsFavoriteDictEntry
	nil,                               // 17: IsFavoriteCommentDictRsp.IsFavoriteDictEntry
	(*CommonResponse)(nil),            // 18: CommonResponse
}
var file_like_proto_depIdxs = []int32{
	18, // 0: FavoriteVideoActionRsp.common_rsp:type_name -> CommonResponse
	18, // 1: FavoriteCommentActionRsp.common_rsp:type_name -> CommonResponse
	6,  // 2: IsFavoriteVideoDictReq.favorite_unit_list:type_name -> FavoriteVideoUnit
	16, // 3: IsFavoriteVideoDictRsp.is_favorite_dict:type_name -> IsFavoriteVideoDictRsp.IsFavoriteDictEntry
	9,  // 4: IsFavoriteCommentDictReq.favorite_unit_list:type_name -> FavoriteCommentUnit
	17, // 5: IsFavoriteCommentDictRsp.is_favorite_dict:type_name -> IsFavoriteCommentDictRsp.IsFavoriteDictEntry
	0,  // 6: FavoriteService.FavoriteVideoAction:input_type -> FavoriteVideoActionReq
	2,  // 7: FavoriteService.FavoriteCommentAction:input_type -> FavoriteCommentActionReq
	4,  // 8: FavoriteService.GetFavoriteVideoIdList:input_type -> GetFavoriteVideoIdListReq
	7,  // 9: FavoriteService.IsFavoriteVideoDict:input_type -> IsFavoriteVideoDictReq
	10, // 10: FavoriteService.IsFavoriteCommentDict:input_type -> IsFavoriteCommentDictReq
	12, // 11: FavoriteService.GetCommentLikeSum:input_type -> CommentLikeSumReq
	14, // 12: FavoriteService.GetVideoLikeSum:input_type -> VideoLikeSumReq
	1,  // 13: FavoriteService.FavoriteVideoAction:output_type -> FavoriteVideoActionRsp
	3,  // 14: FavoriteService.FavoriteCommentAction:output_type -> FavoriteCommentActionRsp
	5,  // 15: FavoriteService.GetFavoriteVideoIdList:output_type -> GetFavoriteVideoIdListRsp
	8,  // 16: FavoriteService.IsFavoriteVideoDict:output_type -> IsFavoriteVideoDictRsp
	11, // 17: FavoriteService.IsFavoriteCommentDict:output_type -> IsFavoriteCommentDictRsp
	13, // 18: FavoriteService.GetCommentLikeSum:output_type -> CommentLikeSumRsq
	15, // 19: FavoriteService.GetVideoLikeSum:output_type -> VideoLikeSumRsq
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_like_proto_init() }
func file_like_proto_init() {
	if File_like_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_like_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteVideoActionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteVideoActionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteCommentActionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteCommentActionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFavoriteVideoIdListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFavoriteVideoIdListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteVideoUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFavoriteVideoDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFavoriteVideoDictRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteCommentUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFavoriteCommentDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFavoriteCommentDictRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentLikeSumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentLikeSumRsq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoLikeSumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoLikeSumRsq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_like_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_like_proto_goTypes,
		DependencyIndexes: file_like_proto_depIdxs,
		MessageInfos:      file_like_proto_msgTypes,
	}.Build()
	File_like_proto = out.File
	file_like_proto_rawDesc = nil
	file_like_proto_goTypes = nil
	file_like_proto_depIdxs = nil
}
